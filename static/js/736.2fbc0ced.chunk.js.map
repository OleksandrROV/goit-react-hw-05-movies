{"version":3,"file":"static/js/736.2fbc0ced.chunk.js","mappings":"+OAEMA,E,OAAWC,GAAAA,GAAH,4H,SCgCd,EA5Ba,WACX,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,GAAIO,KAAKH,EACxB,GAAE,CAACJ,KAEF,4BACE,kCACCG,GAAUA,EAAKK,QACd,SAACV,EAAD,UACGK,EAAKM,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IAAKC,EAAAA,EAAeF,EAAMG,aAC1BC,IAAKJ,EAAMK,KACXC,MAAM,SAER,uBAAIN,EAAMK,SANHL,EAAMV,GADF,OAYjB,qEAIP,C,+LChCDiB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCACTC,EAAa,mCAAG,WAAMC,GAAN,uFACDH,EAAAA,EAAAA,IAAA,qCAAwCC,GAAUE,GADjD,cACdC,EADc,yBAEbA,EAAKC,MAFQ,2CAAH,sDAKbC,EAAiB,mCAAG,WAAOC,EAAOJ,GAAd,uFACLH,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBJ,GAHsB,cAClBC,EADkB,yBAKjBA,EAAKC,MALY,2CAAH,wDAQjBG,EAAkB,mCAAG,WAAOzB,GAAP,8FAAW0B,EAAX,+BAA4B,GAAIN,EAAhC,gCACNH,EAAAA,EAAAA,IAAA,gBACRjB,GADQ,OACH0B,EADG,oBACuBR,EADvB,mBAEjBE,GAHuB,cACnBC,EADmB,yBAKlBA,EAAKC,MALa,2CAAH,sDAQlBhB,EAAa,mCAAG,WAAMqB,GAAN,uFACDV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADC,cACdG,EADc,yBAIbA,EAAKC,KAAKnB,MAJG,2CAAH,sDAObyB,EAAgB,mCAAG,WAAMD,GAAN,uFACJV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADI,cACjBG,EADiB,yBAIhBA,EAAKC,KAAKO,SAJM,2CAAH,qD,sDC/Bf,IAAMjB,EAAe,iC","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","servises/apiServis.js","servises/constans.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ListCast = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-auto-rows: minmax(100px, auto);\n`;\n\nexport { ListCast };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastInfo } from 'servises/apiServis';\nimport { BASE_IMG_URL } from 'servises/constans';\nimport { ListCast } from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    fetchCastInfo(id).then(setCast);\n  }, [id]);\n  return (\n    <div>\n      <h1>Cast:</h1>\n      {cast && !!cast.length ? (\n        <ListCast>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={BASE_IMG_URL + actor.profile_path}\n                alt={actor.name}\n                width=\"150\"\n              />\n              <p>{actor.name}</p>\n            </li>\n          ))}\n        </ListCast>\n      ) : (\n        <div>We don't have any cast for this movie</div>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '76cbb606f190fc237086ec33f1fd98a3';\nconst fetchDayTrend = async options => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nconst fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nconst fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nconst fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nconst fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n\nexport {\n  fetchDayTrend,\n  fetchMovieByQuery,\n  fetchMovieDetsById,\n  fetchCastInfo,\n  fetchReviewsInfo,\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["ListCast","styled","id","useParams","useState","cast","setCast","useEffect","fetchCastInfo","then","length","map","actor","src","BASE_IMG_URL","profile_path","alt","name","width","axios","apiKey","fetchDayTrend","options","resp","data","fetchMovieByQuery","query","fetchMovieDetsById","detailEndpoint","movieId","fetchReviewsInfo","results"],"sourceRoot":""}