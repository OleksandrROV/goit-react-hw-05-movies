{"version":3,"file":"static/js/415.ed23f3c9.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,C,yGCWD,UAtBa,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE6BC,EAAAA,EAAAA,MAF7B,gBAEWC,EAFX,EAEWA,QACRH,EAAUG,GAHb,gDAKGC,QAAQC,IAAR,MALH,wDAAD,EAQD,GAAE,KAGD,4BACE,kCACA,SAAC,IAAD,CAAYhB,OAAQA,MAGzB,C,+LCvBDiB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCACTL,EAAa,mCAAG,WAAMM,GAAN,uFACDF,EAAAA,EAAAA,IAAA,qCAAwCC,GAAUC,GADjD,cACdC,EADc,yBAEbA,EAAKC,MAFQ,2CAAH,sDAKbC,EAAiB,mCAAG,WAAOC,EAAOJ,GAAd,uFACLF,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCK,EADtC,+BAEjBJ,GAHsB,cAClBC,EADkB,yBAKjBA,EAAKC,MALY,2CAAH,wDAQjBG,EAAkB,mCAAG,WAAOlB,GAAP,8FAAWmB,EAAX,+BAA4B,GAAIN,EAAhC,gCACNF,EAAAA,EAAAA,IAAA,gBACRX,GADQ,OACHmB,EADG,oBACuBP,EADvB,mBAEjBC,GAHuB,cACnBC,EADmB,yBAKlBA,EAAKC,MALa,2CAAH,sDAQlBK,EAAa,mCAAG,WAAMC,GAAN,uFACDV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADC,cACdE,EADc,yBAIbA,EAAKC,KAAKO,MAJG,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACJV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADI,cACjBE,EADiB,yBAIhBA,EAAKC,KAAKP,SAJM,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","servises/apiServis.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchDayTrend } from 'servises/apiServis';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { results } = await fetchDayTrend();\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <h1>Home</h1>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '76cbb606f190fc237086ec33f1fd98a3';\nconst fetchDayTrend = async options => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nconst fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nconst fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nconst fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nconst fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n\nexport {\n  fetchDayTrend,\n  fetchMovieByQuery,\n  fetchMovieDetsById,\n  fetchCastInfo,\n  fetchReviewsInfo,\n};\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","useEffect","fetchDayTrend","results","console","log","axios","apiKey","options","resp","data","fetchMovieByQuery","query","fetchMovieDetsById","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo"],"sourceRoot":""}