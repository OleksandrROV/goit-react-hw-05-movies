{"version":3,"file":"static/js/499.676c9f7d.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,C,iHCgCD,UA1Cc,WACZ,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAea,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAaF,EAAaG,IAAI,UAEpCC,EAAAA,EAAAA,YAAU,WACHF,IAGL,iBAAC,gHAE6BG,EAAAA,EAAAA,IAAkBH,GAF/C,gBAEWI,EAFX,EAEWA,QACRR,EAAUQ,GAHb,gDAKGC,QAAQC,IAAR,MALH,wDAAD,EAQD,GAAE,CAACN,IAWJ,OACE,4BACE,oCACA,kBAAMO,SARW,SAAAC,GACnBA,EAAEC,iBACFV,EAAgB,CAAEL,MAAAA,GACnB,EAKG,WACE,kBAAOgB,KAAK,OAAOC,MAAOjB,EAAOkB,SAblB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChChB,EAASgB,EACV,KAYK,mBAAQD,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAY3B,OAAQA,MAGzB,C,+LC5CD+B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCACTC,EAAa,mCAAG,WAAMC,GAAN,uFACDH,EAAAA,EAAAA,IAAA,qCAAwCC,GAAUE,GADjD,cACdC,EADc,yBAEbA,EAAKC,MAFQ,2CAAH,sDAKbhB,EAAiB,mCAAG,WAAOT,EAAOuB,GAAd,uFACLH,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCrB,EADtC,+BAEjBuB,GAHsB,cAClBC,EADkB,yBAKjBA,EAAKC,MALY,2CAAH,wDAQjBC,EAAkB,mCAAG,WAAO/B,GAAP,8FAAWgC,EAAX,+BAA4B,GAAIJ,EAAhC,gCACNH,EAAAA,EAAAA,IAAA,gBACRzB,GADQ,OACHgC,EADG,oBACuBN,EADvB,mBAEjBE,GAHuB,cACnBC,EADmB,yBAKlBA,EAAKC,MALa,2CAAH,sDAQlBG,EAAa,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACRS,EADQ,4BACmBR,EADnB,oBADC,cACdG,EADc,yBAIbA,EAAKC,KAAKK,MAJG,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACRS,EADQ,4BACmBR,EADnB,oBADI,cACjBG,EADiB,yBAIhBA,EAAKC,KAAKf,SAJM,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Movie.jsx","servises/apiServis.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByQuery } from 'servises/apiServis';\n\nconst Movie = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const serchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!serchQuery) {\n      return;\n    }\n    (async () => {\n      try {\n        const { results } = await fetchMovieByQuery(serchQuery);\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [serchQuery]);\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <h1>Movies</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movie;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '76cbb606f190fc237086ec33f1fd98a3';\nconst fetchDayTrend = async options => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nconst fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nconst fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nconst fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nconst fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n\nexport {\n  fetchDayTrend,\n  fetchMovieByQuery,\n  fetchMovieDetsById,\n  fetchCastInfo,\n  fetchReviewsInfo,\n};\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","serchQuery","get","useEffect","fetchMovieByQuery","results","console","log","onSubmit","e","preventDefault","type","value","onChange","target","axios","apiKey","fetchDayTrend","options","resp","data","fetchMovieDetsById","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo"],"sourceRoot":""}