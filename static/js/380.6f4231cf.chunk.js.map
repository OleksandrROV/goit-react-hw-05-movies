{"version":3,"file":"static/js/380.6f4231cf.chunk.js","mappings":"kOAEaA,EAAUC,EAAAA,GAAAA,IAAH,8FAMPC,EAAQD,EAAAA,GAAAA,GAAH,gDAILE,EAAcF,EAAAA,GAAAA,EAAH,gDAIXG,EAAWH,EAAAA,GAAAA,EAAH,gDAIRI,EAAWJ,EAAAA,GAAAA,GAAH,gD,SCZRK,EAAY,SAAC,GAEnB,IAAD,IADJC,UAAaC,EACT,EADSA,MAAOC,EAChB,EADgBA,SAAUC,EAC1B,EAD0BA,aAAcC,EACxC,EADwCA,OAE5C,OACE,UAACX,EAAD,YACE,SAACE,EAAD,UAAQM,KACR,UAACL,EAAD,4BAA4BO,MAC5B,SAACL,EAAD,yBACA,UAACD,EAAD,eAAYK,MACZ,SAACJ,EAAD,sBACCM,GAAYA,EAAOC,OAClBD,EAAOE,KAAI,SAAAC,GAAK,OAAI,uBAAmBA,EAAMC,MAAjBD,EAAME,GAAlB,KAEhB,oEAIP,E,mCCtBYC,EAAShB,EAAAA,GAAAA,OAAH,uIASNiB,EAAMjB,EAAAA,GAAAA,IAAH,0GAgBhB,GATwBA,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,uLCqCrB,EAjDqB,WACnB,OAAkCmB,EAAAA,EAAAA,UAAS,MAA3C,eAAOb,EAAP,KAAkBc,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTT,GAAOU,EAAAA,EAAAA,MAAPV,IAERW,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBZ,GAAIa,MAAK,SAAAC,GAC1BT,EAAaS,EACd,GACF,GAAE,CAACd,IAMJ,OAAKT,GASH,4BACE,0CACA,SAACU,EAAD,CAAQc,QAfS,WACnBT,EAASE,EAASQ,MAAMC,KACzB,EAaG,sBACA,gBACEC,ICpCoB,kCDoCA3B,EAAU4B,YAC9BC,IAAI,SACJC,MAAM,MACNC,OAAO,SAGT,SAAChC,EAAD,CAAWC,UAAWA,KACtB,UAACW,EAAD,YACE,SAAC,EAAD,CAAiBqB,GAAG,OAAOP,MAAO,CAAEC,KAAMT,EAASQ,MAAMC,MAAzD,mBAGA,SAAC,EAAD,CAAiBM,GAAG,UAAUP,MAAO,CAAEC,KAAMT,EAASQ,MAAMC,MAA5D,yBAIF,SAAC,KAAD,QA1BA,0BACE,yCA4BP,C,+LErDDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCACTC,EAAa,mCAAG,WAAMC,GAAN,uFACDH,EAAAA,EAAAA,IAAA,qCAAwCC,GAAUE,GADjD,cACdb,EADc,yBAEbA,EAAKc,MAFQ,2CAAH,sDAKbC,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,uFACLH,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCK,EADtC,+BAEjBH,GAHsB,cAClBb,EADkB,yBAKjBA,EAAKc,MALY,2CAAH,wDAQjBhB,EAAkB,mCAAG,WAAOZ,GAAP,8FAAW+B,EAAX,+BAA4B,GAAIJ,EAAhC,gCACNH,EAAAA,EAAAA,IAAA,gBACRxB,GADQ,OACH+B,EADG,oBACuBN,EADvB,mBAEjBE,GAHuB,cACnBb,EADmB,yBAKlBA,EAAKc,MALa,2CAAH,sDAQlBI,EAAa,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACRS,EADQ,4BACmBR,EADnB,oBADC,cACdX,EADc,yBAIbA,EAAKc,KAAKM,MAJG,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACRS,EADQ,4BACmBR,EADnB,oBADI,cACjBX,EADiB,yBAIhBA,EAAKc,KAAKQ,SAJM,2CAAH,qD","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","servises/constans.js","servises/apiServis.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  position: absolute;\n  left: 350px;\n  right: 25px;\n  top: 150px;\n`;\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const ReleaseDate = styled.p`\n  margin-bottom: 25px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 25px;\n`;\n\nexport const Lowtitle = styled.h3`\n  margin-bottom: 10px;\n`;\n","import {\n  InfoBox,\n  Lowtitle,\n  Overview,\n  ReleaseDate,\n  Title,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  movieData: { title, overview, release_date, genres },\n}) => {\n  return (\n    <InfoBox>\n      <Title>{title}</Title>\n      <ReleaseDate>Release date: {release_date}</ReleaseDate>\n      <Lowtitle>Overview:</Lowtitle>\n      <Overview> {overview}</Overview>\n      <Lowtitle>Genres:</Lowtitle>\n      {genres && !!genres.length ? (\n        genres.map(genre => <p key={genre.id}>{genre.name}</p>)\n      ) : (\n        <p>We don't have any ganre for this movie</p>\n      )}\n    </InfoBox>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBack = styled.button`\n  width: 100px;\n  height: 50px;\n  border-radius: 15px;\n  position: absolute;\n  top: 85px;\n  right: 15px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 50px;\n  justify-content: center;\n  margin-left: 40px;\n`;\n\nconst MoveeLinkStyled = styled(NavLink)`\n  display: flex;\n  border: 1px solid darkslategray;\n  padding: 5px;\n  border-radius: 5px;\n  color: orangered;\n  width: 80px;\n  justify-content: center;\n`;\nexport default MoveeLinkStyled;\n","import { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { fetchMovieDetsById } from 'servises/apiServis';\nimport { BASE_IMG_URL } from 'servises/constans';\nimport MoveeLinkStyled, { Box, GoBack } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieDetsById(id).then(resp => {\n      setMovieData(resp);\n    });\n  }, [id]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  if (!movieData) {\n    return (\n      <div>\n        <h1>Loading ...</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>MovieDetails</h1>\n      <GoBack onClick={handleGoBack}>Go back</GoBack>\n      <img\n        src={BASE_IMG_URL + movieData.poster_path}\n        alt=\"Poster\"\n        width=\"300\"\n        height=\"400\"\n      />\n\n      <MovieInfo movieData={movieData} />\n      <Box>\n        <MoveeLinkStyled to=\"cast\" state={{ from: location.state.from }}>\n          cast\n        </MoveeLinkStyled>\n        <MoveeLinkStyled to=\"reviews\" state={{ from: location.state.from }}>\n          reviews\n        </MoveeLinkStyled>\n      </Box>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '76cbb606f190fc237086ec33f1fd98a3';\nconst fetchDayTrend = async options => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nconst fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nconst fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nconst fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nconst fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n\nexport {\n  fetchDayTrend,\n  fetchMovieByQuery,\n  fetchMovieDetsById,\n  fetchCastInfo,\n  fetchReviewsInfo,\n};\n"],"names":["InfoBox","styled","Title","ReleaseDate","Overview","Lowtitle","MovieInfo","movieData","title","overview","release_date","genres","length","map","genre","name","id","GoBack","Box","NavLink","useState","setMovieData","navigate","useNavigate","location","useLocation","useParams","useEffect","fetchMovieDetsById","then","resp","onClick","state","from","src","poster_path","alt","width","height","to","axios","apiKey","fetchDayTrend","options","data","fetchMovieByQuery","query","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo","results"],"sourceRoot":""}